# I. Сапер

# Ограничение времени 	1 секунда
# Ограничение памяти 	64Mb
# Ввод 	стандартный ввод или input.txt
# Вывод 	стандартный вывод или output.txt

# Вам необходимо построить поле для игры "Сапер" по его конфигурации – размерам и координатам расставленных на нем мин.
# Вкратце напомним правила построения поля для игры "Сапер":
#   Поле состоит из клеток с минами и пустых клеток
#   Клетки с миной обозначаются символом *
#   Пустые клетки содержат число ki,j, 0≤ ki, j ≤ 8 – количество мин на соседних клетках. Соседними клетками являются восемь клеток, имеющих смежный угол или сторону.

# Формат ввода
# В первой строке содержатся три числа: N, 1 ≤ N ≤ 100 - количество строк на поле, M, 1 ≤ M ≤ 100 - количество столбцов на поле, K, 0 ≤ K ≤ N ⋅ M - количество мин на поле.
# В следующих K строках содержатся по два числа с координатами мин: p, 1 ≤ p ≤ N - номер строки мины, q, 1 ≤ 1 ≤ M - номер столбца мины.

# Формат вывода
# Выведите построенное поле, разделяя строки поля переводом строки, а столбцы - пробелом.


# Решение:

def mina(x, y, a, b):
    x = x - 1
    y = y - 1
    
    m[x][y] = "*"
    
    if (x > 0) & (y > 0):
        if m[x-1][y-1].isdigit():
            m[x-1][y-1] = str(int(m[x-1][y-1]) + 1)
    
    if (y > 0):
        if m[x][y-1].isdigit():
            m[x][y-1] = str(int(m[x][y-1]) + 1)
    
    if (x != (a-1)) & (y > 0):
        if m[x+1][y-1].isdigit():
            m[x+1][y-1] = str(int(m[x+1][y-1]) + 1)
    
    if (x > 0) & (y != (b-1)):
        if m[x-1][y+1].isdigit():
            m[x-1][y+1] = str(int(m[x-1][y+1]) + 1)
    
    if (y != (b-1)):
        if m[x][y+1].isdigit():
            m[x][y+1] = str(int(m[x][y+1]) + 1)
    
    
    if (x != (a-1)) & (y != (b-1)):
        if m[x+1][y+1].isdigit():
            m[x+1][y+1] = str(int(m[x+1][y+1]) + 1)
    
    if (x > 0):
        if m[x-1][y].isdigit():
            m[x-1][y] = str(int(m[x-1][y]) + 1)
    
    if (x != (a-1)):
        if m[x+1][y].isdigit():
            m[x+1][y] = str(int(m[x+1][y]) + 1)




data =[]
with open("input.txt", "r") as f:
    for line in f:
        data.append(line)
a, b, c = data[0].split()
m = []
for i in range(int(a)):
    m.append([])
    for j in range(int(b)):
        m[i].append("0")
if int(c)>0:
    for line in range(1, (int(c)+1)):
        x, y = data[line].split()
        mina(int(x), int(y), int(a) , int(b))

with open("output.txt", "w") as file:
    for i in range(int(a)):
        for j in range(int(b)):
            file.write(m[i][j] + " ")
        file.write("\n")
